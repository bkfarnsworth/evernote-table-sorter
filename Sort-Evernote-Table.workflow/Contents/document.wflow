<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>428</string>
	<key>AMApplicationVersion</key>
	<string>2.7</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run JavaScript.action</string>
				<key>ActionName</key>
				<string>Run JavaScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>var sortKey;
var columns = ['Name', 'Age', 'Job']function run(input, parameters) {	   sortKey = columns.indexOf(String(input));   var evernote = Application('Evernote');   var note = evernote.notebooks.byName("Unsorted").notes.byId("x-coredata://D578A29C-EC81-49E3-8D08-CBE8BEBF8BE3/ENNote/p10315")		   var trRegex =  /&lt;tr&gt;([\s\S]*?)&lt;\/tr&gt;/gm;   var originalHtml = note.htmlContent();   var trResults = getMatches(trRegex, originalHtml);   var trResultsWithoutHeader = trResults.slice(1);
   var preSort = trResultsWithoutHeader.slice();   trResultsWithoutHeader.sort(tdDivSort);
   var postSort = trResultsWithoutHeader.slice();
   
   //we are just going to toggle sort - if it matches asc, then go desc.  if it matches desc, then go asc
   if(arraysAreEqual(preSort, postSort)) {
      trResultsWithoutHeader.reverse()
   }   var finalResults = [trResults[0], ...trResultsWithoutHeader]   var joinedTrs = finalResults.join();   var tbodyRegex = /([\s\S]*?&lt;tbody&gt;)[\s\S]*?(&lt;\/tbody&gt;[\s\S]*)/gm;   var newHtml = originalHtml.replace(tbodyRegex, (mystring, arg1, arg2) =&gt; arg1 + joinedTrs + arg2);   note.htmlContent = newHtml;		return input;}function arraysAreEqual(a1, a2) {
	
	for(var i = 0; i &lt; a1.length; i++) {
		if(a1[i] !== a2[i]) {
			return false;
		}
	}
	
	return true;
}function getMatches(regex, string) {  let array = []  while ((resultArray = regex.exec(string)) !== null) {    // console.log('resultArray[0]: ', resultArray[0]);    // console.log('resultArray[1]: ', resultArray[1]);    array.push(resultArray[0])  }  return array;}function getSortDiv(tr) {  var tdRegex = /&lt;td[\s\S]*?&gt;([\s\S]*?)&lt;\/td&gt;/gm;  var tdResult = getMatches(tdRegex, tr);  return tdResult[sortKey];}function tdDivSort(a, b) {  var trA = a;  var trB = b;  var sortDivA = getSortDiv(trA);  var sortDivB = getSortDiv(trB);  if (sortDivA &lt; sortDivB) {      return -1;  }    if (sortDivA &gt; sortDivB) {     return 1;  }  return 0;}</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunJavaScript</string>
				<key>CFBundleVersion</key>
				<string>1.0</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunJavaScriptAction</string>
				<key>InputUUID</key>
				<string>1EEEF79E-9D76-4298-8376-46CF07252170</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
					<string>JavaScript</string>
				</array>
				<key>OutputUUID</key>
				<string>02D0A078-F349-4823-9E33-48A868F14CD5</string>
				<key>UUID</key>
				<string>41899EF2-883E-4A4F-9955-D1B89BB24303</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>function run(input, parameters) {
	
	// Your script goes here

	return input;
}</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>529.000000:969.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run JavaScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.evernote.Evernote</string>
		<key>serviceApplicationPath</key>
		<string>/Applications/Evernote.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
